{"version":3,"sources":["./src/environments/environment.ts","./src/app/event.service.ts","./src/app/components/help/help.component.html","./src/app/components/help/help.component.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/inputs/input-table/input-table.component.ts","./src/app/components/inputs/input-table/input-table.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/help/faq-accordion/faq-accordion.component.ts","./src/app/components/help/faq-accordion/faq-accordion.component.html","./src/app/components/help/user-manual/user-manual.component.ts","./src/app/components/help/user-manual/user-manual.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/dashboard/dashboard-table/dashboard-table.component.ts","./src/app/components/dashboard/dashboard-table/dashboard-table.component.html","./src/app/components/inputs/inputs.component.ts","./src/app/components/inputs/inputs.component.html","./src/app/components/dashboard/dashboard-table/dashboard-table-datasource.ts","./src/app/components/forms/forms.component.ts","./src/app/components/forms/forms.component.html","./src/app/components/inputs/input-table/input-table-datasource.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  constructor() { }\r\n\r\n  public _subject = new BehaviorSubject<any>('');\r\n\r\n  emit<T>(data: T) {\r\n    this._subject.next(data);\r\n  }\r\n\r\n  on<T>(): Observable<T> {\r\n    return this._subject.asObservable();\r\n  }\r\n}\r\n","<body>\r\n  <div id=\"faq-container\">\r\n    <div id='help-menu'>\r\n      <div class='help-menu-item' id='faq' (click)=\" this.currentMenuItem = 'faq' \"\r\n        [ngClass]=\"{active: currentMenuItem=='faq'}\">FAQ</div>\r\n        <div class='help-menu-item' id='user-manual' (click)=\" this.currentMenuItem = 'user-manual' \"\r\n        [ngClass]=\"{active: currentMenuItem=='user-manual'}\">User Manual</div>\r\n      <div class='help-menu-item' id='manual-video' (click)=\" this.currentMenuItem = 'manual-video' \"\r\n        [ngClass]=\"{active: currentMenuItem=='manual-video'}\">Manual Video</div>\r\n    </div>\r\n    <cdk-virtual-scroll-viewport id='help-content' itemSize=\"2\">\r\n      <faq-accordion id='faq-content' *ngIf=\"currentMenuItem==='faq'\"></faq-accordion>\r\n      <app-user-manual id='user-manual-content' *ngIf=\"currentMenuItem==='user-manual'\"></app-user-manual>\r\n      <div id='manual-video-content' *ngIf=\"currentMenuItem==='manual-video'\">Manuel-Video CONTENT</div>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n  panelOpenState = false;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  currentMenuItem: string = 'faq';\r\n\r\n}","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { EventService } from 'src/app/event.service';\r\nimport { trigger, state, style, animate, transition, query, stagger, keyframes } from '@angular/animations';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private eventService: EventService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  requestPage(page: string) {\r\n    this.eventService.emit<string>(page);\r\n  }\r\n}\r\n","<body>\r\n  <div class=\"workspace\">\r\n    <div class=\"background\"></div>\r\n  <div class=\"textContainer\" id=\"container0\">\r\n    <h1>Willkommen bei B.E.M.S.! </h1>\r\n    <hr>\r\n    <p>Willkommen bei „Bavarian Emissions Measurement System“ (B.E.M.S.), das System zur Erfassung dienstlicher Flugreisen und zur Ermittlung der entstandenen CO₂e- Emissionen. \r\n      <br><br>\r\n      Das B.E.M.S. unterstützt Sie dabei Flugreisen schnell und einfach zu erfassen. Dabei werden die entstandenen CO₂e- Emissionen erfasst und automatisch berechnet.\r\n      </p>\r\n  </div>\r\n  <div class=\"textContainer\" id=\"container1\">\r\n    <h1>Was ermöglichen wir?</h1>\r\n    <hr>\r\n    <p>\r\n      Dank B.E.M.S. erhalten Sie einen besseren Überblick über die insgesamt entstandenen CO₂e-Emissionen.\r\n      <br><br>\r\n      Klimaneutralität steht immer mehr im Fokus der Öffentlichkeit und stellt uns zunehmend vor Herausforderungen. Der Schutz unserer Umwelt spielt auch für zukünftige Generationen eine zentrale Rolle. Um das Ziel der klimaneutralen Staatsverwaltung bis zum Jahr 2030 verwirklichen zu können, wurde das Projekt zur Entwicklung einer Kompensationsplattform ins Leben gerufen. \r\n      <br><br>\r\n      Das B.E.M.S. erfasst und berechnet die bei dienstlichen Flugreisen entstandenen CO₂e-Emissionen vollständig und schafft so die Voraussetzung für eine spätere Kompensation. \r\n      </p>\r\n  </div>\r\n  <div class=\"textContainer\" id=\"container2\">\r\n    <h1>Wie kann ich Anfangen?</h1>\r\n    <hr>\r\n    <p>Um Ihren ersten Formular zu erstellen clicken Sie <strong><u><a (click)=\"requestPage('forms')\">hier</a></u></strong>.\r\n      <br><br>\r\n      Weitere Informationen und zusätzliche Unterlagen finden Sie unter <strong><u><a (click)=\"requestPage('help')\">Hilfe</a></u></strong>.\r\n    </p>\r\n  </div>\r\n</div>\r\n</body>\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, MatSortable } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { InputTableDataSource, InputTableItem } from './input-table-datasource';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Flightinput } from './flightinput';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Component({\r\n  selector: 'input-table',\r\n  templateUrl: './input-table.component.html',\r\n  styleUrls: ['./input-table.component.css']\r\n})\r\nexport class InputTableComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<InputTableItem>;\r\n  dataSource: InputTableDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['datum', 'behoerdennummer', 'abflugort', 'ankunftsort', 'befoerderungsklasse', 'personenAnzahl', 'emissionen', 'select'];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.dataSource = new InputTableDataSource();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateData();\r\n  }\r\n\r\n  updateData(): void {\r\n    let tempData: InputTableItem[] = [];\r\n    const dataObserver: Observable<Flightinput> = this.http.get<Flightinput>(\"/api/input/view\");\r\n    dataObserver.subscribe(data => {\r\n      data.data.forEach(elem => {\r\n        tempData.push({\r\n          id: elem.id,\r\n          datum: elem.startingDate,\r\n          behoerdennummer: elem.authorityNumber,\r\n          abflugort: elem.iataStart,\r\n          ankunftsort: elem.iataDest,\r\n          befoerderungsklasse: elem.travelClass.toUpperCase(),\r\n          personenAnzahl: elem.number,\r\n          emissionen: elem.emission\r\n        })\r\n        this.dataSource.data = tempData;\r\n      })\r\n    });\r\n    console.log(dataObserver);\r\n    //forcing update, table.renderRows() does not trigger table update\r\n    this.sort.sort(<MatSortable>({ id: \"datum\", start: \"asc\" }));\r\n    this.table.renderRows();\r\n    console.log(this.table);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n\r\n  /** for the Toggles */\r\n  updateActiveStatus(row: { activate: boolean; }) {\r\n    row.activate = !row.activate;\r\n  }\r\n\r\n  selection = new SelectionModel<InputTableItem>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: InputTableItem): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.behoerdennummer + 1}`;\r\n  }\r\n\r\n  deleteSelected() {\r\n    console.log(this.selection.selected);\r\n    this.selection.selected.forEach(\r\n      flight => {\r\n        const delObserver = this.http.delete(\"/api/input/data/\" + flight.id);\r\n        console.log(delObserver.subscribe());\r\n      }\r\n    )\r\n    this.updateData();\r\n    alert(\"Einträge wurden gelöscht\")\r\n  }\r\n\r\n  saveSelected() {\r\n    const delObserver = this.http.delete(\"/api/input/merge\");\r\n    console.log(delObserver.subscribe());\r\n    alert(\"Daten wurden gespeichert\")\r\n    const newTemp = this.http.post(\"/api/input/create\", null);\r\n    console.log(newTemp.subscribe())\r\n    this.updateData();\r\n  }\r\n}","<div class=\"mat-elevation-z8 data-table\">\r\n    <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n  \r\n       <!-- Datum Column -->\r\n      <ng-container matColumnDef=\"datum\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Datum</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.datum}}</td>\r\n      </ng-container>\r\n  \r\n       <!-- Behördennummer Column -->\r\n      <ng-container matColumnDef=\"behoerdennummer\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Behördennummer</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.behoerdennummer}}</td>\r\n      </ng-container>\r\n  \r\n       <!-- Abflugort Column -->\r\n      <ng-container matColumnDef=\"abflugort\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Abflugort</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.abflugort}}</td>\r\n      </ng-container>\r\n  \r\n       <!-- Ankunftsort Column -->\r\n      <ng-container matColumnDef=\"ankunftsort\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ankunftsort</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.ankunftsort}}</td>\r\n      </ng-container>\r\n  \r\n       <!-- Beförderungsklasse Column -->\r\n      <ng-container matColumnDef=\"befoerderungsklasse\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Beförderungsklasse</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.befoerderungsklasse}}</td>\r\n      </ng-container>\r\n  \r\n       <!-- PersonenAnzahl Column -->\r\n      <ng-container matColumnDef=\"personenAnzahl\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Personen Anzahl</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.personenAnzahl}}</td>\r\n      </ng-container>\r\n      \r\n       <!-- Emissionen Column -->\r\n      <ng-container matColumnDef=\"emissionen\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Emissionen</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.emissionen}}</td>\r\n      </ng-container>\r\n\r\n\r\n      <!-- toggle Column -->\r\n\t  <!--<ng-container matColumnDef=\"toggle\">\r\n\t  \t<th mat-header-cell *matHeaderCellDef> Save </th>\r\n\t\t  <td mat-cell *matCellDef=\"let row\" >\r\n        <mat-slide-toggle  [checked]=\"row.activate\" (change)=\"updateActiveStatus(row)\">\r\n        </mat-slide-toggle>\r\n      </td>\r\n\t  </ng-container>-->\r\n\r\n\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>Select</th>\r\n\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                      (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\"\r\n                      [aria-label]=\"checkboxLabel(row)\">\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n    \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n    <!-- toggle all -->\r\n    <!--<div class=\"selectAll\">\r\n    <mat-slide-toggle id = \"selectAll\">select all</mat-slide-toggle>\r\n    </div>-->\r\n\r\n    <!-- select all -->\r\n    <div class=\"selectAll\">\r\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                      [aria-label]=\"checkboxLabel()\"> Select all\r\n      </mat-checkbox>\r\n    </div>\r\n    \r\n    \r\n    <!-- page number -->\r\n    <!-- [pageSizeOptions]=\"[10, 15, 25, 100]\" -->\r\n    <mat-paginator #paginator\r\n        [length]=\"dataSource?.data?.length\"\r\n        [pageIndex]=\"0\"\r\n        [pageSize]=\"10\">\r\n    </mat-paginator>\r\n    </div>\r\n\r\n  <!-- Button -->\r\n<div class=\"save\">\r\n  <button mat-raised-button (click)=\"saveSelected()\"> Speichern</button>\r\n</div>\r\n<div class=\"delete\">\r\n  <button mat-raised-button (click)=\"deleteSelected()\"> Löschen</button>\r\n</div>\r\n<div class=\"update\" (click)=\"updateData()\">\r\n  <button mat-raised-button> Update</button>\r\n</div>\r\n\r\n\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n    <div class=\"footer\">\r\n        <p>Copyright ©  Bavarian Emissions Measurement System - Hochschule München</p>\r\n    </div>\r\n</body>","\r\nimport { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n\r\n}\r\n","<body>\r\n    <div class=\"background\"></div>\r\n    <dashboard-table>\r\n    </dashboard-table>    \r\n</body>\r\n","import { trigger, style, animate, transition } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      transition('* => *', [\r\n        style({ opacity: 0 }),\r\n        animate(100, style({ opacity: 1 }))\r\n      ]),\r\n      transition('* => *', [\r\n        animate(400, style({ opacity: 1 }))\r\n      ])\r\n    ])\r\n  ]\r\n\r\n})\r\n\r\nexport class AppComponent {\r\n  page: string = \"home\";\r\n  constructor() { };\r\n\r\n  title = 'bems';\r\n\r\n  setPage(page: string) {\r\n    this.page = page;\r\n  }\r\n}\r\n\r\n","<header>\r\n  <app-navbar (notify)=\"setPage($event)\"></app-navbar>\r\n</header>\r\n<body>\r\n  <div [@fadeInOut]='page'>\r\n    <app-home *ngIf=\"page == 'home'\"></app-home>\r\n    <app-dashboard *ngIf=\"page == 'dashboard'\">\r\n\r\n    </app-dashboard>\r\n    <app-forms *ngIf=\"page == 'forms'\"></app-forms>\r\n    <app-inputs *ngIf=\"page == 'inputs'\"></app-inputs>\r\n    <app-help *ngIf=\"page == 'help'\"></app-help>\r\n    </div>\r\n    <app-footer></app-footer>\r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'faq-accordion',\r\n  templateUrl: './faq-accordion.component.html',\r\n  styleUrls: ['./faq-accordion.component.css']\r\n})\r\nexport class FaqAccordionComponent implements OnInit {\r\n  panelOpenState = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  currentFaqItem: string = 'faq-0';\r\n\r\n\r\n}","<div class='faq-top-header'>Über BEMS</div>\r\n<mat-accordion>\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        1.\tWarum gibt es BEMS?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Die Zukunftsaufgabe Klimaschutz soll weiter aktiv vorangetrieben werden. Das Programm wurde entwickelt, um die bayerische Staatsverwaltung bei der Umsetzung des Ministerratsbeschluss zu unterstützen. Das Ziel ist die Realisierung der klimaneutralen Staatsverwaltung bis 2030. Durch BEMS werden die Flugreisen der unmittelbaren Staatsverwaltung und die dadurch entstandenen CO₂-Äquivalente schnell und einfach erfasst. </p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        2.\tWelchen Nutzen bietet das Tool?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Das Programm vereinfacht den bisherigen Kompensationsprozess erheblich, da die manuelle Eingabe und das hin und her Verschicken von Excel-Dateien entfällt. Das System berechnet die entstehenden CO₂-Äquivalente außerdem genauer, als es bisher der Fall war. Dadurch können die eingetragenen Daten nun zentral abgespeichert werden.</p>\r\n  </mat-expansion-panel>\r\n  </mat-accordion>\r\n\r\n\r\n\r\n<div class='faq-top-header'>Dateneingabe</div>\r\n<mat-accordion>\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        3.\tWie läuft die Dateneingabe ab?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Nach der erfolgreichen Anmeldung mit der eigenen Kennung, können die Daten unter „Formulare“ eingetragen werden. Diese müssen anschließend unter „Einträge“ noch geprüft und freigegeben werden. Nachdem die Daten gespeichert worden sind, werden diese automatisch im Dashboard angezeigt.</p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        4.\tWelche Daten müssen in das System eingetragen werden? \r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>- Abflugdatum </p>\r\n    <p>&nbsp;</p>\r\n    <p>- Abflugflughafen und Zielflughafen (Flughafencode/ IATA Code)</p>\r\n    <p>&nbsp;</p>\r\n    <p>- Beförderungsklasse </p>\r\n    <p>&nbsp;</p>\r\n    <p>- Behördennummer/Dienstnummer</p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        5.\tKönnen auch Daten der RKS oder BayRMS in das System eingelesen werden?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Ja, die übermittelten Daten können automatisch in das Programm eingelesen werden. Die Daten müssen anschließend nur noch überprüft und genehmigt werden. </p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        6.\tKönnen falsch eingetragenen Daten nach der Eingabe noch abgeändert werden?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Ja, das System überprüft automatisch, ob alle Daten vollständig eingetragen wurden. Sollten bei der Eingabe fehlerhafte Daten eingegeben worden sein, besteht die Möglichkeit diese im Nachhinein zu ändern. Geänderte Daten werden anschließend erneut überprüft (z.B. IATA Code-Stellen, 7-stellige Dienstellennummer).</p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        7.\tWas, wenn ich mir nicht mehr sicher bin, ob ich eine Flugreise schon einmal eingetragen habe?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Das System überprüft automatisch, ob eine Flugreise bereits eingegeben wurde und man wird sofort darauf aufmerksam gemacht. Sollten die Daten bereits in das System eingetragen worden sein fragt das System, ob die Flugreise erneut gespeichert werden soll. </p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        8.\tWie werde ich über die entsprechende Abgabefrist der Daten informiert? \r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Zwischenlandungen gelten als Flugende. Folgt ein Anschlussflug ist dieser als neue Flugreise in das System einzugeben. Auch ungeplante (Zwischen-)Landungen sind soweit als möglich auf diese Weise in das System einzutragen. </p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        9.\tMein(e) Vorgesetzte(r) möchten einen Report über die Flugreisen der Abteilung, kann ich so etwas im System erstellen?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Ja, alle Elemente des Dashboards können in Excel exportiert werden.</p>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n  \r\n\r\n<div class='faq-top-header'>Datenschutz</div>\r\n<mat-accordion>\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        10.\tKönnen Kollegen nachvollziehen, wie viel ich beruflich geflogen bin? \r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Nein, es werden keine personenbezogenen Daten gespeichert. Es lässt sich lediglich nachvollziehen, welches z.B. Ministerium/Behörde eine Flugreise gebucht hat.</p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        11.\tMüssen auch andere Transportmittel z.B. Zug- oder Autoreisen erfasst werden? \r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Nein, aktuell werden nur Flugreisen erfasst.</p>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<div class='faq-top-header'>Allgemein</div>\r\n<mat-accordion>\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        12.\tKann ich mich auch auf anderen Endgeräten anmelden und das Programm nutzen?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Ja, es handelt sich um eine Webanwendung. Das Programm kann überall und jederzeit von jedem Gerät aufgerufen werden.</p>\r\n  </mat-expansion-panel>\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        13.\tWerden zur Nutzung Vorkenntnisse benötigt?\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <p>Nein, das Programm wurde so konzipiert, dass jeder das Programm einfach bedienen kann. „Hier“ finden Sie Lernunterlagen und werden Schritt für Schritt durch die Dateneingabe geführt.</p>\r\n  </mat-expansion-panel>\r\n\r\n<mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>\r\n      14.\tGibt es entsprechende „Lernunterlagen“?\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n  <p>Zur Schritt-für-Schritt Anleitung und dem Erklärvideo geht‘s „hier“. Hier wurden alle wichtigen Informationen rund um die Dateneingabe und das Programm zusammengefasst dargestellt.</p>\r\n</mat-expansion-panel>\r\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-manual',\r\n  templateUrl: './user-manual.component.html',\r\n  styleUrls: ['./user-manual.component.css']\r\n})\r\nexport class UserManualComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  pdfSource = \"https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  currentMenuItem: string = 'user-manual';\r\n\r\n}\r\n","<h1> Angular 10 PDF Viewer</h1>\r\n\r\n<div class=\"container\">\r\n  \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { FormsComponent } from './components/forms/forms.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HelpComponent } from './components/help/help.component';\r\nimport { InputsComponent } from './components/inputs/inputs.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DashboardTableComponent } from './components/dashboard/dashboard-table/dashboard-table.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputTableComponent } from './components/inputs/input-table/input-table.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FaqAccordionComponent } from './components/help/faq-accordion/faq-accordion.component';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { UserManualComponent } from './components/help/user-manual/user-manual.component';\r\n//import {PdfViewerModule} from 'ng2-pdf-viewer'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    FormsComponent,\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    HelpComponent,\r\n    InputsComponent,\r\n    InputTableComponent,\r\n    DashboardComponent,\r\n    DashboardTableComponent,\r\n    FaqAccordionComponent,\r\n    UserManualComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    HttpClientModule,\r\n    NgxCsvParserModule,\r\n    MatExpansionModule,\r\n    ScrollingModule\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { EventService } from 'src/app/event.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\n\r\nexport class NavbarComponent implements OnInit {\r\n  public page: string = \"home\";\r\n  @Output()\r\n  notify: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private eventService: EventService) {\r\n\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.eventService.on<string>().subscribe(\r\n      data => {\r\n        if (data != \"\") {\r\n          this.loadPage(data);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  loadPage(page: string) {\r\n    this.notify.emit(page);\r\n    this.page = page;\r\n  }\r\n\r\n}\r\n","<header>\r\n<div class=\"logo\" (click)=\"loadPage('home')\">\r\n  <div class=\"vertical-center\">\r\n  <img\r\n    class=\"logo_pic\"\r\n    src=\"assets/bems_logo_white.svg\"\r\n    alt=\"BEMS logo\"\r\n  />\r\n</div>\r\n  <div class=\"text\">\r\n    <p class =\"upperText\">BEMS</p>\r\n   <p class=\"bottomText\">Bavarian Emission Meausurement System</p>\r\n  </div>\r\n\r\n</div>\r\n  <nav>\r\n    <div class=\"item\">\r\n      <a\r\n        [style.color]=\"this.page == 'dashboard'? 'white':'#b6b6b6'\"\r\n        (click)=\"loadPage('dashboard')\"\r\n        >Dashboard</a\r\n      >\r\n    </div>\r\n    <div class=\"divider divider1\"></div>\r\n    <div class=\"item\">\r\n      <a\r\n        [style.color]=\"this.page == 'forms' ? 'white' : '#b6b6b6'\"\r\n        (click)=\"loadPage('forms')\"\r\n        >Formulare</a\r\n      >\r\n    </div>\r\n    <div class=\"divider divider2\"></div>\r\n    <div class=\"item\">\r\n      <a\r\n        [style.color]=\"this.page == 'inputs' ? 'white' : '#b6b6b6'\"\r\n        (click)=\"loadPage('inputs')\"\r\n        >Einträge</a\r\n      >\r\n    </div>\r\n    <div class=\"divider divider3\"></div>\r\n    <div class=\"item\">\r\n      <a\r\n        [style.color]=\"this.page == 'help' ? 'white' : '#b6b6b6'\"\r\n        (click)=\"loadPage('help')\"\r\n        >Hilfe</a\r\n      >\r\n    </div>\r\n  </nav>\r\n</header>","import { HttpClient } from '@angular/common/http';\r\nimport { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, MatSortable } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { Flightdata } from '../../flightData';\r\nimport { Flightinput } from '../../inputs/input-table/flightinput';\r\nimport { DashboardTableDataSource, DashboardTableItem } from './dashboard-table-datasource';\r\n\r\n@Component({\r\n  selector: 'dashboard-table',\r\n  templateUrl: './dashboard-table.component.html',\r\n  styleUrls: ['./dashboard-table.component.css']\r\n})\r\nexport class DashboardTableComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<any>;\r\n\r\n  dataSource = new DashboardTableDataSource();\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['datum', 'behoerdennummer', 'abflugort', 'ankunftsort', 'befoerderungsklasse', 'personenAnzahl', 'emissionen'];\r\n\r\n\r\n  constructor(private ngxCsvParser: NgxCsvParser,\r\n    private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateData();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n\r\n  updateData(): void {\r\n    let tempData: DashboardTableItem[] = [];\r\n    let dataObserver: Observable<Flightinput> = this.http.get<Flightinput>(\"/api/dashboard\");\r\n    dataObserver.subscribe(data => {\r\n      data.data.forEach(elem => {\r\n        tempData.push({\r\n          datum: elem.startingDate,\r\n          behoerdennummer: elem.authorityNumber,\r\n          abflugort: elem.iataStart,\r\n          ankunftsort: elem.iataDest,\r\n          befoerderungsklasse: elem.travelClass.toUpperCase(),\r\n          personenAnzahl: elem.number,\r\n          emissionen: elem.emission\r\n        })\r\n      })\r\n      this.dataSource.data = tempData;\r\n    });\r\n    console.log(dataObserver);\r\n    //forcing update, table.renderRows() does not trigger table update\r\n    this.sort.sort(<MatSortable>({ id: \"datum\", start: \"asc\" }));\r\n    this.table.renderRows();\r\n    console.log(this.table);\r\n  }\r\n\r\n  csvRecords: any = [];\r\n\r\n  importedFile = null;\r\n\r\n  @ViewChild('fileImportInput', { static: false }) fileImportInput: any;\r\n  fileChangeListener($event: any): void {\r\n\r\n    // Select the files from the event\r\n    const files = $event.srcElement.files;\r\n\r\n    // Parse the file you want to select for the operation along with the configuration\r\n    this.ngxCsvParser.parse(files[0], { header: true, delimiter: ',' })\r\n      .pipe().subscribe((result) => {\r\n        console.log('Result', result);\r\n        this.csvRecords = result;\r\n      }, (error: NgxCSVParserError) => {\r\n        console.log('Error', error);\r\n      });\r\n\r\n  }\r\n\r\n  public datePrint(date: Date): string {\r\n    let dateString: string = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n    return dateString;\r\n  }\r\n\r\n  importData() {\r\n    let flights: any[] = []\r\n    this.csvRecords.forEach((element: any) => {\r\n      const data: Flightdata =\r\n      {\r\n        date: this.datePrint(new Date(element[\"Datum\"])),\r\n        authorityNumber: parseInt(element[\"Dienstellennummer\"]),\r\n        iataStart: element[\"IATA Startflughafen\"],\r\n        iataDest: element[\"IATA Ankunftsflughafen\"],\r\n        class: element[\"Flugklasse\"],\r\n        travelling: 1\r\n      }\r\n      flights.push(data);\r\n    });\r\n    console.log(flights)\r\n    let observable = this.http.post(\"/api/data/add\", { \"flight\": flights });\r\n    observable.subscribe();\r\n    console.log(observable);\r\n    this.updateData();\r\n    alert(\"Data was successfully imported!\");\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"mat-elevation-z8 data-table\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n\r\n    <ng-container matColumnDef=\"datum\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Datum</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.datum}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"behoerdennummer\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Behördennummer</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.behoerdennummer}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"abflugort\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Abflugort</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.abflugort}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"ankunftsort\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Ankunftsort</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.ankunftsort}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"befoerderungsklasse\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Beförderungsklasse</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.befoerderungsklasse}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"personenAnzahl\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Personen Anzahl</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.personenAnzahl}}</td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"emissionen\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Emissionen</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.emissionen}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator #paginator\r\n      [length]=\"dataSource?.data?.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"10\"\r\n      [pageSizeOptions]=\"[10]\">\r\n</mat-paginator>\r\n\r\n</div>\r\n\r\n<div class=\"utility\">\r\n  <div class=\"left\">\r\n    <input #fileImportInput class=\"select\" type=\"file\" (change)=\"fileChangeListener($event)\"  accept=\".csv\"> \r\n  </div>\r\n  <div class=\"right\">\r\n    <button mat-raised-button class=\"import\" (click)=\"importData()\">Import</button>\r\n      <button mat-raised-button class=\"export\" type=\"submit\" onclick=\"window.open('http://localhost:8080/api/file/download')\">Export</button>\r\n    <button mat-raised-button (click)=\"updateData()\"> Update</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inputs',\r\n  templateUrl: './inputs.component.html',\r\n  styleUrls: ['./inputs.component.css']\r\n})\r\nexport class InputsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n  <div class=\"background\"></div><input-table></input-table>    \r\n</body>\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\nexport interface DashboardTableItem {\r\n  datum: string;\r\n  behoerdennummer: number;\r\n  abflugort: string;\r\n  ankunftsort: string;\r\n  befoerderungsklasse: string;\r\n  personenAnzahl: number;\r\n  emissionen: number;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Data source for the DashboardTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class DashboardTableDataSource extends DataSource<DashboardTableItem> {\r\n  data: DashboardTableItem[] = [];\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<DashboardTableItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void { }\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: DashboardTableItem[]): DashboardTableItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: DashboardTableItem[]): DashboardTableItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'datum': return compare(a.datum, b.datum, isAsc);\r\n        case 'behoerdennummer': return compare(+a.behoerdennummer, +b.behoerdennummer, isAsc);\r\n        case 'abflugort': return compare(+a.abflugort, +b.abflugort, isAsc);\r\n        case 'ankunftsort': return compare(+a.ankunftsort, +b.ankunftsort, isAsc);\r\n        case 'befoerderungsklasse': return compare(+a.befoerderungsklasse, +b.befoerderungsklasse, isAsc);\r\n        case 'personenAnzahl': return compare(+a.personenAnzahl, +b.personenAnzahl, isAsc);\r\n        case 'emissionen': return compare(+a.emissionen, +b.emissionen, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Flightdata } from '../flightData';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html',\r\n  styleUrls: ['./forms.component.css'],\r\n  animations: [\r\n    trigger('validityState', [\r\n      state('false', style({\r\n        border: '2px solid red',\r\n      })),\r\n      state('true', style({\r\n      })),\r\n      transition('true => false', animate('300ms ease-in-out',\r\n        keyframes([\r\n          style({\r\n            border: '0.5px solid red',\r\n            transform: 'translate(50px -50%)'\r\n          }),\r\n          style({\r\n            border: '1px solid red',\r\n            transform: 'translate(-50x -50%)'\r\n          }),\r\n          style({\r\n            border: '1.5px solid red',\r\n            transform: 'translate(50% -50%)'\r\n          }),\r\n          style({\r\n            border: '2px solid red',\r\n            transform: 'translate(-50% -50%)'\r\n          })]\r\n        ))),\r\n      transition('false => true', animate('300ms ease-in-out',\r\n        keyframes([\r\n          style({\r\n            border: '2px solid red',\r\n          }),\r\n          style({\r\n            border: '1.5px solid darkgreen',\r\n          }),\r\n          style({\r\n            border: '1px solid darkgreen',\r\n          }),\r\n          style({\r\n            border: '0.5px solid darkgreen',\r\n          })]\r\n        ))),\r\n    ])\r\n  ]\r\n})\r\nexport class FormsComponent implements OnInit {\r\n\r\n\r\n  constructor(private http: HttpClient, private dateAdapter: DateAdapter<Date>) {\r\n    this.currentIndex = 0;\r\n    this.dateAdapter.setLocale('de');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  startDate: Date = new Date(\"08/10/2021\");\r\n  /**\r\n   * Array with the information we need from the user\r\n   */\r\n  inputData = [\r\n    [\"Datum\", \"10.08.2001\"],\r\n    [\"Dienststellennr.\", \"\"],\r\n    [\"Abflugsort\", \"\"],\r\n    [\"Ankunftsort\", \"\"],\r\n    [\"Beförderungsklasse\", \"\"],\r\n    [\"Personenanzahl\", \"\"],\r\n    [\"Zusammenfassung\", \"Überprüfen Sie die Daten\"]\r\n  ]\r\n\r\n  /**\r\n   * Placeholder information for input fields. Helps the user understand what belongs into that field\r\n   * DE = German\r\n   */\r\n  placeholder_DE: string[] = [\"z.B. 0123456\", \"z.B. MUC\", \"z.B. SPC\", \"z.B. ECO/BUS\", \"z.B. 1\"];\r\n  progressPercent: number[] = [0, 12, 27, 39, 53, 70, 84, 100]\r\n  currentIndex: number = 0;\r\n  showSummary = false;\r\n  correctAns = true;\r\n  /**\r\n   * Specifies RegExpressions for answers in the forms\r\n   */\r\n  private regExps: RegExp[] = [\r\n    //DATE\r\n    new RegExp(\"^[0-9]{7}$\"), //BEHÖRDENR\r\n    new RegExp(\"^([A-Z]{3})$\"), //IATA\r\n    new RegExp(\"^([A-Z]{3})$\"), //IATA\r\n    new RegExp(\"economy|business\"), //FLUGKLASSE\r\n    new RegExp(\"^[1-9][0-9]*$\") //Personenanzahl\r\n  ];\r\n\r\n  expectedFormat: string[] = [\r\n    \"dd.MM.yyyy\",\r\n    \"7-Stellige Zahl\",\r\n    \"3 Buchstaben\",\r\n    \"3 Buchstaben\",\r\n    \"\",\r\n    \"Eine Zahl\"\r\n  ]\r\n\r\n  /**\r\n   * Gets the text from the forms input field\r\n   * @param val text in input field\r\n   */\r\n  public getInputText(val: any) {\r\n    //assert not null. Object is always present when component is loaded\r\n    this.inputData[this.currentIndex][1] = val;\r\n  }\r\n\r\n  /**\r\n   * Checks for valid answer in input field. If given, jumps to specified page\r\n   * @param index to page we want to jump\r\n   */\r\n  public goToIndex(index: number) {\r\n    if (index < this.currentIndex) {\r\n      this.currentIndex = index;\r\n    } else {\r\n      if (this.currentIndex > 0) {\r\n        this.correctAns = this.currentIndex < 6 ?\r\n          this.regExps[this.currentIndex - 1].test(this.inputData[this.currentIndex][1]) : true;\r\n      }\r\n      if (this.correctAns) {\r\n        this.currentIndex = index;\r\n      } else {\r\n        alert(\"Erwateter Input: \" + this.expectedFormat[this.currentIndex])\r\n      }\r\n    }\r\n    this.showSummary = this.currentIndex > 5;\r\n  }\r\n\r\n  public datePrint(date: Date): string {\r\n    let dateString: string = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n    return dateString;\r\n  }\r\n\r\n  public confirmEntry() {\r\n    const data: Flightdata = {\r\n      date: this.datePrint(this.startDate),\r\n      authorityNumber: parseInt(this.inputData[1][1]),\r\n      iataStart: this.inputData[2][1],\r\n      iataDest: this.inputData[3][1],\r\n      class: this.inputData[4][1],\r\n      travelling: parseInt(this.inputData[5][1])\r\n    };\r\n    const testPost1 = this.http.post<Flightdata>(\"/api/input/data/add\", { \"flight\": [data] });\r\n    console.log(data);\r\n    console.log(testPost1.subscribe());\r\n    this.currentIndex = 0;\r\n    this.showSummary = !this.showSummary\r\n    for (let i = 1; i < 6; i++) {\r\n      this.inputData[i][1] = \"\";\r\n    }\r\n  }\r\n\r\n}\r\n","<body>\r\n  <div class=\"workspace\">\r\n    <div class=\"container\">\r\n      <p id=\"inputTitle\">{{ this.inputData[currentIndex][0] }}</p>\r\n      <div *ngIf=\"!showSummary; else summary\">\r\n        <div class=\"inputField\" *ngIf=\"currentIndex!=0 && currentIndex!=4\">\r\n          <input\r\n            [@validityState]=\"this.correctAns\"\r\n            class=\"inputField\"\r\n            type=\"text\"\r\n            value=\"{{ inputData[currentIndex][1] }}\"\r\n            placeholder=\"{{ placeholder_DE[currentIndex-1] }}\"\r\n            (keyup)=\"getInputText($any($event.target).value)\"\r\n            (keyup.enter)=\"goToIndex(currentIndex + 1)\"\r\n          />\r\n        </div>\r\n        <div class=\"datepicker\" *ngIf=\"currentIndex==0\">\r\n          <mat-form-field>\r\n            <input class=\"datepickerInput\" matInput [matDatepicker]=\"datepicker\" [(ngModel)]=\"startDate\" (ngModelChange)=\"inputData[0][1] = datePrint(startDate)\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker startView=\"year\"></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"flightclass\" *ngIf=\"currentIndex==4\">\r\n          <button (click)=\"this.inputData[this.currentIndex][1] = 'economy'; goToIndex(currentIndex+1);\" class=\"eco\">ECO</button>\r\n          <button (click)=\"this.inputData[this.currentIndex][1] = 'business'; goToIndex(currentIndex+1);\" class=\"bus\">BUS</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"inputInfo\">\r\n        {{ expectedFormat[currentIndex] }}\r\n      </div>\r\n      <ng-template #summary>\r\n        <div class=\"summary\">\r\n          <br />\r\n          <div *ngFor=\"let entry of inputData\">\r\n            <table>\r\n              <tr>\r\n                <td>{{ entry[0] }}</td>\r\n                <td>.............</td>\r\n                <td>{{ entry[1] }}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <button class=\"confirmButton\" (click)=\"confirmEntry()\">Senden</button>\r\n      </ng-template>\r\n\r\n      <div class=\"progressbarContainer\">\r\n        <div\r\n          class=\"progressbar\"\r\n          id=\"doneBar\"\r\n          [style.width.%]=\"currentIndex < 6 ? progressPercent[currentIndex] : 100\"\r\n        ></div>\r\n        <div\r\n          class=\"progressbar\"\r\n          id=\"currentBar\"\r\n          [style.width.%]=\"currentIndex < 6 ? progressPercent[currentIndex+1] : 100\"\r\n        ></div>\r\n        <div class=\"progressbar\" id=\"leftBar\"></div>\r\n        <ul>\r\n          <li><a (click)=\"goToIndex(0)\">Datum</a></li>\r\n          <li><a (click)=\"goToIndex(1)\">Dienststellennr.</a></li>\r\n          <li><a (click)=\"goToIndex(2)\">Abflugsort</a></li>\r\n          <li><a (click)=\"goToIndex(3)\">Ankunftsort</a></li>\r\n          <li><a (click)=\"goToIndex(4)\">Beförderungsklasse</a></li>\r\n          <li><a (click)=\"goToIndex(5)\">Personen</a></li>\r\n          <li><a (click)=\"goToIndex(6)\">Zusammenfassung</a></li>\r\n        </ul>\r\n      </div>\r\n      <img\r\n        *ngIf=\"currentIndex != 0\"\r\n        class=\"navArrow\"\r\n        id=\"leftNavArrow\"\r\n        src=\"assets/nav_arrow.png\"\r\n        alt=\"Left Navigation Arrow\"\r\n        (click)=\"goToIndex(currentIndex - 1)\"\r\n      />\r\n      <img\r\n        *ngIf=\"!showSummary\"\r\n        class=\"navArrow\"\r\n        id=\"rightNavArrow\"\r\n        src=\"assets/nav_arrow.png\"\r\n        alt=\"Right Navigation Arrow\"\r\n        (click)=\"goToIndex(currentIndex + 1)\"\r\n      />\r\n    </div>\r\n  </div>\r\n</body>\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\nexport interface InputTableItem {\r\n  id: number;\r\n  datum: string;\r\n  behoerdennummer: number;\r\n  abflugort: string;\r\n  ankunftsort: string;\r\n  befoerderungsklasse: string;\r\n  personenAnzahl: number;\r\n  emissionen: number;\r\n}\r\n\r\n/**\r\n * Data source for the DashboardTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class InputTableDataSource extends DataSource<InputTableItem> {\r\n  public data: InputTableItem[] = [];\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<InputTableItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void { }\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: InputTableItem[]): InputTableItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: InputTableItem[]): InputTableItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'datum': return compare(a.datum, b.datum, isAsc);\r\n        case 'behoerdennummer': return compare(+a.behoerdennummer, +b.behoerdennummer, isAsc);\r\n        case 'abflugort': return compare(+a.abflugort, +b.abflugort, isAsc);\r\n        case 'ankunftsort': return compare(+a.ankunftsort, +b.ankunftsort, isAsc);\r\n        case 'befoerderungsklasse': return compare(+a.befoerderungsklasse, +b.befoerderungsklasse, isAsc);\r\n        case 'personenAnzahl': return compare(+a.personenAnzahl, +b.personenAnzahl, isAsc);\r\n        case 'emissionen': return compare(+a.emissionen, +b.emissionen, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}